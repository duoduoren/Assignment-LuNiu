Scenarios: 

1. Hiking
 1.1. Rent a ReachNow to drive to mountain rainier on weekends with friends
 1.2. On the way, fill the gas
 1.3. Buy the ticket to get into the park
Sequence of Flow:
carRentalService ReachNow;
driver Kevin;
passenger 4;
carModel BMWX1;

1.1.
kevin.searchInReachNow -> ReachNow: available

If( available is true )
       kevin.searchReachNow -> ReachNow, BMWX1 -> Collection of parkingLots with BMWX1: ParkingLots
       //kevin.findsDesirableCarInFirstParkingLot -> Collection of BMWX1: cars
       parkingLotNumber = 1
       Loop
               if kevin.wantToSeeTheCarVdeo 
	       kevin.clickOnTheVdeo -> ReachNow, Car, stream : video
	       ReachNow.playTheVideo -> stream, video
	       end
	       
               if Kevin.findDesirableCar -> ReachNow, year, milage, location : car
               BMWX1 = car;
	       Kevin.selectTheCar ->selectConfirmed
	       ReachNow -> selectConfirmed
	       break;
	       end
	       
               parkingLotNumber = parkingLotNumber + 1
               end

       End
       BMWX1 = car
       if BMWX1 is working
                Kevin.unlockTheCar -> BMWX1, phone or ReachNowCard, ReachNow, time, location : unlockConfirmation
                ReachNow.response = unlockConfirmation
       else 
       Kevin.cantUnlockTheCar
else
       kevin.searchReachNowAfterAWhileBack
end 

1.2.
If internet.is available
        Traveller.searchTheGasStation -> gasStation, distance : collection of gasStations
               gasStationNumber = 1;
               Loop
                      If gasStation is open
                              break
                      end
                      gasStationNumber = gasStationNumber + 1
               end
Else
        Traveller.cantsearchTheGasStationOnline

1.3.
If internet.isAvailable
	Traveller.searchTicketsOnline -> internet, questions : collection of ticketWebsites
	pageNumber = 1;
	price = Double.Max;
	lowestPriceWebsite = null;

	Loop
	If ticketWebsite is not empty or ticketWebsite!=null
		 traveller.chooseTicket -> ticket, ticketType, date, time, age : price
		 response = price 

		 if (response < price)
			price = response;
			lowestPriceWebsite = ticketWebsite;
		 end
	end
	pageNumber = pageNumber + 1
	end
	  
	If traveller.wantsToAddCoupon and lowestPriceWebsite.acceptsCoupon
	      traveller.typeInCouponCode -> CouponCode : authorized
		     If authorized is true
			      lowestPriceWebsite.applyTheCoupon -> coupon : price
		     end 
		     
	If traveller.wantToQuitThePurchase and purchaseIsNotFinished
	      traveller.quitThePurchase -> status : logout
	      response = logout                            
	end
End
Else
	traveller.browseInternetAfterAWhileBack                   
 

2. Organise a career fair(Suppose you are the organizer)
 2.1. Update company and seat at career fair website

Organizer NEU
Website 2017CareerFair

2.1.
NEU.sendInvitationEmail -> email, invitation, companies : accept
          if accept is true
                    company.chooseSeat -> company, seat, 2017CareerFair : collection of seats
                           pageNumber = 1
                           loop
                                  if company.findNoSeat
                                           Break
                                  end
                                  Company.findDesirableSeat -> seatNumber, 2017CareerFair : seatNumber
                                  if seat is not occupied
                                           company.selectSeat -> seatNumber, company : seatConfirmation             
                                           response: seatConfirmation
                                                          break
                                  else
                                           pageNumber = pageNumber + 1
                                  end
                           end 
 
          else
          end
	  
	  
3. Order Pizza from Pizza Hut
3.1. Add new item before/after delivery

Delivery time 7:30pm
Pizza BBQ Chicken Pizza

If PizzaHutWebsite.isNotEmpty
	BBQChickenPizza = pizza
        customer.searchPizza -> BBQChickenPizza, PizzaHut : result
                 if result is not empty or BBQChiekenPizza!=null
                          customer.setDeliveryTime -> timeSlot, name, address : collections of timeSlots
                          deliveryTime = 7:30pm
                          
                 else  customer.cantBuyPizza
                 End
         
         If customer wants to add new item after payment
                 Customer.addNewItem -> item, orderNumber, customerID, pizzaHut : newItem
                 if adding time <= 7:30pm
                           Customer.setNewDeliveryTime -> deliveryTime, address, order : order
                           response = order
                 end
                 if adding time > 7:30pm
                           Customer.setNewDeliveryTime -> deliveryTime, address, order : NewOrder 
                           Response = NewOrder
                 end
         else,
         end         
              
         customer.purchaseTheOrder ->order, creditCard, address, pizzaHut : paymentConfirmation
         response = paymentConfirmation    
Else
customer.searchInPizzaHutAfterAWhileBack


4. Design a code sharing platform (eg: Github).
4.1. User login
4.2. user publish code

Code sharing platform WeCode

4.1.
user.loginToWeCode -> password, username, email: authorize
pageNumber = 1         
          loop 
                if authorize is true
                         User.logIntoHomepage -> WeCode, page : homePage
                                 Break
                else
                                 PageNumber = 1
                end
          end

4.2.
publishPage = homePage
if publishPage is not empty or publishPage!=null
          user.uploadeCode -> code, homepage, weCode -> uploaded
                   pageNumber = 1
                   loop
                          if uploaded is true
                                  break
                          else
                                  pageNumber = 1
                          end
                   end 
else
          user.cantPublishCode
end                         
                

5. Design a soft-drink/snacks vending machine.
5.1. customer purchases products at vending machine

5.1.
If internet is available
       customer.typeInProductNumber -> ProductNumber : valid
       if valid is true
                Customer.makePayment -> price, creditCard, cash : paymentMethod
                        paymentMethod1 = payByCreditCard;
                        paymentMethod2 = payByCash;
                        if customer.choosePaymentMethod1 -> creditCard, bank : verified
                                   if verified is true,
                                           vendingMachine.printReceipt -> receipt : paymentConfirmed
                                   else
                                           vendingMachine.rejectPayment -> reject: paymentFailed
                                   end
                        end
                        if customer.choosePaymentMethod2 -> cash, vendingMachine: paymentConfirmed
                        response = paymentConfirmed
                        end           
       else
                Customer.cantMakePayment
else
       customer.useVendingMachineLater



Tips : 
1. You may go as deep as you want , like the first scenario will be an example, you can simplify it or make it more complex.
2. Use pseudo code. This assignment has nothing to do with the real code, we want you to experience what is object oriented language. 


Success criteria:
1. Be able to parsing the daily activities into some small block and learn the way to design things. Different may have different ways to parse the same scenario. So make your own copy. 

2. Be able to make progress according to reviews from teachers and TA. 

Requirement:

1. Deadline is Sep, 15th. If you encounter any problem to meet this deadline, please contact TA or Professor directly.

2. Individual work, not team project. But can have discuss with other classmates. 
